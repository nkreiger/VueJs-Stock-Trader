{"remainingRequest":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/src/components/stocks/Stock.vue?vue&type=style&index=0&id=45ec8c5f&scoped=true&lang=css&","dependencies":[{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/src/components/stocks/Stock.vue","mtime":1539753419000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/cache-loader/dist/cjs.js","mtime":1539753125000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card.border-success {\n  width: 20rem;\n  margin: 15px;\n}\n.danger {\n  border: 1px solid red;\n}\n",{"version":3,"sources":["Stock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Stock.vue","sourceRoot":"src/components/stocks","sourcesContent":["  <template>\n    <div>\n      <div class=\"col-sm-6 col-md-4\">\n        <div class=\"card border-success\">\n          <div class=\"card-header\">\n            <h3 class=\"card-title\">\n              {{ stock.name }}\n              <small>(Price: {{ stock.price }})</small>\n            </h3>\n          </div>\n          <div class=\"card-body text-success\">\n            <input type=\"number\" \n            class=\"form-control\"\n            :class=\"{danger: insufficientFunds}\" \n            placeholder=\"Quantity\"\n            v-model.number=\"quantity\"\n            >\n            <!-- v-model.number to keep it number when it changes and not convert to string -->\n            <br>\n            <button class=\"btn btn-success\" @click=\"buyStock\"\n            :disabled=\"insufficientFunds || quantity <= 0 || !Number.isInteger(quantity)\"\n            >\n              {{ insufficientFunds ? 'Insufficient Funds' : 'Buy'}}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n\n  <script>\nexport default {\n  props: [\"stock\"],\n  data() {\n    return {\n      quantity: 0\n    };\n  },\n  computed: {\n    funds() {\n      // need this to check funds below\n      return this.$store.getters.funds;\n    },\n    insufficientFunds() {\n      // check if quantity * price is greater than funds\n      return this.quantity * this.stock.price > this.funds;\n    }\n  },\n  methods: {\n    buyStock() {\n      const order = {\n        stockId: this.stock.id,\n        stockPrice: this.stock.price,\n        quantity: this.quantity\n      };\n\n      console.log(\"order dispatched\");\n\n      this.$store.dispatch(\"buyStock\", order);\n      this.quantity = 0;\n    }\n  }\n};\n</script>\n  \n\n  <style scoped>\n.card.border-success {\n  width: 20rem;\n  margin: 15px;\n}\n.danger {\n  border: 1px solid red;\n}\n</style>\n  \n"]}]}