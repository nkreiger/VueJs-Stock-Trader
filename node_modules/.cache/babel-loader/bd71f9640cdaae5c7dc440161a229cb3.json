{"remainingRequest":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/babel-loader/lib/index.js!/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/src/components/portfolio/Stock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/src/components/portfolio/Stock.vue","mtime":1539753419000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/cache-loader/dist/cjs.js","mtime":1539753125000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/cache-loader/dist/cjs.js","mtime":1539753125000},{"path":"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/noahkreiger/Documents/allCodeWork/VUE/test-me/test-me/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from \"vuex\";\nexport default {\n  props: [\"stock\"],\n  data: function data() {\n    return {\n      quantity: 0\n    };\n  },\n  computed: {\n    insufficientQuantity: function insufficientQuantity() {\n      // trying to sell more than have return true\n      return this.quantity > this.stock.quantity;\n    }\n  },\n  methods: _objectSpread({}, mapActions({\n    placeSellOrder: \"sellStock\"\n  }), {\n    sellStock: function sellStock() {\n      var order = {\n        stockId: this.stock.id,\n        stockPrice: this.stock.price,\n        quantity: this.quantity\n      }; // max range error = same name as function\n\n      this.placeSellOrder(order);\n      this.quantity = 0;\n    }\n  })\n};",{"version":3,"sources":["Stock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,SAAA,CAAA,OAAA,CADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,gBAAA;AADA,KAAA;AAGA,GANA;AAOA,YAAA;AACA,wBADA,kCACA;AACA;AACA,aAAA,KAAA,QAAA,GAAA,KAAA,KAAA,CAAA,QAAA;AACA;AAJA,GAPA;AAaA,6BACA,WAAA;AACA,oBAAA;AADA,GAAA,CADA;AAIA,aAJA,uBAIA;AACA,UAAA,QAAA;AACA,iBAAA,KAAA,KAAA,CAAA,EADA;AAEA,oBAAA,KAAA,KAAA,CAAA,KAFA;AAGA,kBAAA,KAAA;AAHA,OAAA,CADA,CAMA;;AACA,WAAA,cAAA,CAAA,KAAA;AACA,WAAA,QAAA,GAAA,CAAA;AACA;AAbA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"col-sm-6 col-md-4\">\n        <div class=\"card border-danger\">\n          <div class=\"card-header\">\n            <h3 class=\"card-title\">\n              {{ stock.name }}\n              <small>(Price: {{ stock.price }} | Quantity: {{ stock.quantity }})</small>\n            </h3>\n          </div>\n          <div class=\"card-body text-success\">\n            <input type=\"number\" class=\"form-control\" \n            :class=\"{danger: insufficientQuantity}\"\n            placeholder=\"Quantity\"\n            v-model.number=\"quantity\"\n            >\n            <!-- v-model.number to keep it number when it changes and not convert to string -->\n            <br>\n            <button class=\"btn btn-danger\" @click=\"sellStock\"\n            :disabled=\"insufficientQuantity ||quantity <= 0 || !Number.isInteger(quantity)\"\n            >\n              {{ insufficientQuantity ? 'Not Enough Shares' : 'Sell'}}\n            </button>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n  props: [\"stock\"],\n  data() {\n    return {\n      quantity: 0\n    };\n  },\n  computed: {\n    insufficientQuantity() {\n      // trying to sell more than have return true\n      return this.quantity > this.stock.quantity;\n    }\n  },\n  methods: {\n    ...mapActions({\n      placeSellOrder: \"sellStock\"\n    }),\n    sellStock() {\n      const order = {\n        stockId: this.stock.id,\n        stockPrice: this.stock.price,\n        quantity: this.quantity\n      };\n      // max range error = same name as function\n      this.placeSellOrder(order);\n      this.quantity = 0;\n    }\n  }\n};\n</script>\n\n  <style scoped>\n.card.border-danger {\n  width: 20rem;\n  margin: 15px;\n}\n.danger {\n  border: 1px solid red;\n}\n</style>"],"sourceRoot":"src/components/portfolio"}]}